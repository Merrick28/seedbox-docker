version: '3.9'
services:
###################################
#  TRAEFIK
###################################
  traefik:
    image: traefik:v2.5
    container_name: traefik
    restart: unless-stopped
    command:
      # Globals
      - "--global.checkNewVersion=true"
      - "--global.sendAnonymousUsage=true"
      # Logs
      - "--log=true"
      - "--log.level=${DEBUG_LEVEL}"
      - "--accessLog=true"
      - "--accessLog.filePath=/log/traefik.log"
      - "--accessLog.bufferingSize=100"
      - "--accessLog.filters.statusCodes=400-499"
      # Http & Https      
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      # Permits the update by user's services
      - "--api=true"
      # Docker Configuration      
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=traefik_proxy"
      - "--providers.docker.swarmMode=false"
      - "--providers.file.directory=/etc/traefik/provider"
      - "--providers.file.watch=true"
      # Certificate Resolver
      - "--certificatesresolvers.mydnschallenge.acme.email=${CF_API_EMAIL}"
      - "--certificatesresolvers.mydnschallenge.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.mydnschallenge.acme.storage=/etc/traefik/acme.json"
      - "--serverstransport.insecureskipverify=true"
    labels:
      # Api
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_BASE_URL}-${SERVER_BASE_URL}.${DOMAIN_URL}`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.services.traefik.loadbalancer.server.scheme=http"
      - "traefik.http.routers.traefik.service=api@internal"
      # Wildcard cert
      - "traefik.http.routers.traefik.tls.domains[0].main=${DOMAIN_URL}"
      - "traefik.http.routers.traefik.tls.domains[0].sans=*.${DOMAIN_URL}"
      - "traefik.http.routers.traefik.tls.certresolver=mydnschallenge"
      # Http -> Https
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      # Traefik Authentification
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:${passwd_admin}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $CONFIG_DIR/traefik:/etc/traefik
      - $CONFIG_DIR/traefik/logs:/log
    ports:
      - "80:80"
      - "443:443"
    environment:
      - CLOUDFLARE_EMAIL=${CF_API_EMAIL}
      - CLOUDFLARE_API_KEY=${CF_API_KEY}  
    networks:
      - proxy
##########################################
# Portainer 
##########################################
  portainer:
    image: portainer/portainer-ce
    container_name: portainer-ce
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.rule=Host(`${PORTAINER_BASE_URL}-${SERVER_BASE_URL}.${DOMAIN_URL}`) "
      - "traefik.http.routers.portainer.service=portainer-service"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.services.portainer-service.loadbalancer.server.port=9000"
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - $CONFIG_DIR/portainer:/data
    networks:
      - proxy
###########################################
# FTP
###########################################
  pure_ftp:
    image: stilliard/pure-ftpd:hardened
    container_name: "pure_ftp"
    restart: unless-stopped
    volumes: 
      - $CONFIG_DIR/pure_ftp:/etc/pure-ftpd/passwd
      - $DATA_DIR:/home/ftpusers
    environment:
      - FTP_MAX_CLIENTS=50
      - FTP_MAX_CONNECTIONS=10
      - FTP_PASSIVE_PORTS=30000:30099
      - PUBLICHOST=${SERVER_IPV4}
      - UID=${MYUID}
      - GID=${APACHEGID}
    ports:
      - "21:21"
      - "30000-30099:30000-30099"
    networks:
      - proxy
###########################################
# SFTP
###########################################
  sftp:
    image: atmoz/sftp
    container_name: sftp
    restart: unless-stopped
    volumes: 
      - $DATA_DIR:/home
      - ./sftp/users.conf:/etc/sftp/users.conf
      - ./sftp/ssh_host_ed25519_key:/etc/ssh/ssh_host_ed25519_key
      - ./sftp/ssh_host_rsa_key:/etc/ssh/ssh_host_rsa_key
    ports:
      - "2222:22"
    networks:
      - proxy
############################################
# Postfix
############################################
  postfix:
    image: mwader/postfix-relay
    container_name: "postfix"
    restart: unless-stopped
    volumes:
      - ${CONFIG_DIR}/postfix:/etc/opendkim/keys
    environment:
      - POSTFIX_myhostname="${SERVER_BASE_URL}.${DOMAIN_URL}"
      - OPENDKIM_DOMAINS="${SERVER_BASE_URL}.${DOMAIN_URL}" "${TRAEFIK_BASE_URL}-${SERVER_BASE_URL}.${DOMAIN_URL}"
    networks:
      - proxy
##########################################
# Watchtower
##########################################
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: ${TZ}
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_NO_STARTUP_MESSAGE: "true"
      WATCHTOWER_SCHEDULE: "0 0 4 * * *"
    networks:
      - proxy
#########################################
# JellyFin
#########################################
  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin-router.entrypoints=websecure"
      - "traefik.http.routers.jellyfin-router.service=jellyfin-service"
      - "traefik.http.routers.jellyfin-router.rule=Host(`${JELLYFIN_BASE_URL}-${SERVER_BASE_URL}.${DOMAIN_URL}`) "
      - "traefik.http.routers.jellyfin-router.tls=true"
      - "traefik.http.services.jellyfin-service.loadbalancer.server.port=8096"
    volumes:
      - $CONFIG_DIR/jellyfin/config:/config
      - $DATA_DIR:/data
    environment:
      - PUID=${MYUID}
      - PGID=${MYGID}
      - TZ=${TZ}
    networks:
      - proxy
#########################################
# Plex
#########################################
  plex:
    image: linuxserver/plex:latest
    container_name: plex
    restart: unless-stopped
    volumes:
      - $CONFIG_DIR/plex/config:/config
      - $DATA_DIR:/home
    environment:
      - PUID=${MYUID}
      - PGID=${MYGID}
      - TZ=${TZ}
      - VERSION=docker
    ports:
      - "32400:32400"
#########################################
# Netdata
#########################################
  netdata:
    image: netdata/netdata
    container_name: netdata
    restart: unless-stopped
    hostname: "${NETDATA_BASE_URL}-${SERVER_BASE_URL}.${DOMAIN_URL}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.netdata-router.entrypoints=websecure"
      - "traefik.http.routers.netdata-router.service=netdata-service"
      - "traefik.http.routers.netdata-router.rule=Host(`${NETDATA_BASE_URL}-${SERVER_BASE_URL}.${DOMAIN_URL}`) "
      - "traefik.http.routers.netdata-router.tls=true"
      - "traefik.http.services.netdata-service.loadbalancer.server.port=19999"
      - "traefik.http.routers.netdata-router.middlewares=netdata-auth"
      - "traefik.http.middlewares.netdata-auth.basicauth.users=admin:${passwd_admin}"
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - $CONFIG_DIR/netdata/config:/etc/netdata
      - $CONFIG_DIR/netdata/lib:/var/lib/netdata
      - $CONFIG_DIR/netdata/cache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
    environment:
      - TZ=${TZ}
      - PUID=201
      - PGID=201
    networks:
      - proxy
##########################################
# Networks
##########################################
networks:
  proxy:
    external:
      name: traefik_proxy
